[build-system]
requires = ["setuptools>=67.8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "oreilly_annotations_exporter"
version = "23.7.0"
authors = [{name="Taro Sato", email="okomestudio@gmail.com"}]
description = "oreilly-annotations-exporter for Python"
readme = "README.rst"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Utilities",
]
dependencies = ["requests==2.31.0"]

[project.optional-dependencies]
dev = [
    "black==23.3.0",
    "flake8==6.0.0",
    "isort[pyproject]==5.12.0",
    "pre-commit==3.3.2",
]

test = [
    "coverage[toml]==7.2.7",
    "pytest==7.3.1",
    "pytest-cov==4.1.0",
    "pytest-mock==3.10.0",
]

[project.urls]
"Homepage" = "https://github.com/okomestudio/oreilly-annotations-exporter"
"Buck Tracker" = "https://github.com/okomestudio/oreilly-annotations-exporter/issues"

[project.scripts]
oreilly-annotations-exporter = "oreilly_annotations_exporter.__main__:main"

[tool.setuptools]
package-dir = {"" = "src"}
license-files = ["LICENSE.txt"]
include-package-data = true
package-data = {"oreilly_annotations_exporter" = []}

[tool.black]
line-length = 88
py36 = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.report]
exclude_lines = [
    "def __repr__",
    "def __str__",
    "except ImportError",
    "if __name__ == .__main__.:",
    "log(|ging).(debug|info|warning)",
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.isort]
line_length = 88
force_single_line = true

[tool.pytest.ini_options]
minversion = "7.3"
addopts = "-vv --cov=oreilly_annotations_exporter --cov-report=term-missing"
testpaths = [
    "tests",
]
